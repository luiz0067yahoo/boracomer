name: CreateContainerDockerAwsEC2

on:

  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: SSH connect
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.AWS_INSTANCE_IP }}
            username: ${{ secrets.AWS_INSTANCE_USER }}
            key: ${{ secrets.AWS_SSH_KEY_PEM }}
            port: ${{ secrets.AWS_INSTANCE_SSH_PORT }}
            script: | 
              sudo rm -rf /home/${{ secrets.AWS_INSTANCE_USER }}/${{ github.event.repository.name }}
              echo "remove folder"
              mkdir -p /home/${{ secrets.AWS_INSTANCE_USER }}/${{ github.event.repository.name }}
              echo "create folder"
              sudo chmod 7777 /home/${{ secrets.AWS_INSTANCE_USER }}/${{ github.event.repository.name }}
              echo "permission folder"
              cd /home/${{ secrets.AWS_INSTANCE_USER }}/${{ github.event.repository.name }}
              echo "access folder"
              sudo rm -rf /home/${{ secrets.AWS_INSTANCE_USER }}/${{ github.event.repository.name }}/Dockerfile
              echo "remove Dockerfile"
              #git config --global user.email "${GH_USERNAME}@users.noreply.github.com"
              #git config --global user.name "${GH_USERNAME}"

              sudo wget https://github.com/${{ github.actor }}/${{ github.event.repository.name }}/blob/master/Dockerfile /home/${{ secrets.AWS_INSTANCE_USER }}/${{ github.event.repository.name }}/Dockerfile
              echo "download Dockerfile"

              #docker container stop container_${{ github.event.repository.name }} 
              #echo "stop container"
              #docker kill container_${{ github.event.repository.name }} 
              #echo "kill container"

              sudo docker build -t ${{ github.event.repository.name }} .
              echo "build container"
              #sudo docker run --name container_${{ github.event.repository.name }} -d  ${{ github.event.repository.name }} -p 80:80
              #sudo docker run -d  ${{ github.event.repository.name }} -p ${{ secrets.APP_PORT }}:${{ secrets.APP_PORT }}
              sudo docker run -d -p ${{ secrets.APP_PORT }}:${{ secrets.APP_PORT }} ${{ github.event.repository.name }} 
              echo "run container"

              #sudo docker exec â€“it container_${{ github.event.repository.name }} /bin/bash
